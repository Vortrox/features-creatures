import net.fabricmc.loom.api.mappings.layered.MappingContext
import net.fabricmc.loom.api.mappings.layered.MappingLayer
import net.fabricmc.loom.api.mappings.layered.MappingsNamespace
import net.fabricmc.loom.api.mappings.layered.spec.MappingsSpec
import net.fabricmc.loom.configuration.providers.mappings.intermediary.IntermediaryMappingLayer
import net.fabricmc.mappingio.MappingVisitor
import net.fabricmc.mappingio.tree.MemoryMappingTree


buildscript {
    dependencies {
        classpath group: 'net.fabricmc', name: 'mapping-io', version: '0.3.0', changing: true
    }
}


plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.11.0-SNAPSHOT" apply false
    id 'java'
    id 'com.matyrobbrt.mc.registrationutils' version '0.2.3'
}

registrationUtils {
    group 'retropacifist.featuresandcreatures.reg'
    projects {
        Common { type 'common'; project ':common' }
        Fabric { type 'fabric'; project ':fabric' }
        Forge { type 'forge'; project ':forge' }
    }
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:23.0.0'
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        compileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
        annotationProcessor group:'com.google.auto.service', name:'auto-service', version:'1.0.1'

        compileOnly 'com.github.CorgiTaco:geckolib-core:1.0.12'


        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.18.2:${parchment_version}@zip")
            // https://gist.github.com/CorgiTaco/e4b5f7c968988e8c65bcf9f0093fd602
            // don't convert this to a dynamic instantiation, otherwise java won't see the overridden hashCode
            addLayer(new MappingsSpec<MappingLayer>() {
                final Map<String, String> METHOD_NAME_MAP = Map.of(
                        "getTextureLocation", "_getTextureLocation"
                )

                @Override
                MappingLayer createLayer(MappingContext mappingContext) {
                    return new MappingLayer() {
                        @Override
                        void visit(MappingVisitor mappingVisitor) throws IOException {
                            MemoryMappingTree memoryMappingTree = mappingVisitor as MemoryMappingTree
                            memoryMappingTree.getClasses().forEach(classEntry -> {
                                classEntry.methods.forEach(methodEntry -> {
                                    String newMethodName = METHOD_NAME_MAP.get(methodEntry.getName(MappingsNamespace.NAMED.toString()))
                                    if (newMethodName != null) {
                                        //noinspection GroovyAccessibility
                                        methodEntry.srcName = newMethodName
                                    }
                                })
                            })
                        }

                        @Override
                        MappingsNamespace getSourceNamespace() {
                            return MappingsNamespace.NAMED
                        }

                        @Override
                        List<Class<? extends MappingLayer>> dependsOn() {
                            return List.of(IntermediaryMappingLayer.class)
                        }
                    }
                }

                @Override
                int hashCode() {
                    // used to make sure caches stay consistent
                    return METHOD_NAME_MAP.hashCode()
                }
            })
        }

        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.18.2+build.3:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
        maven { url = "https://maven.parchmentmc.org/" }
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
